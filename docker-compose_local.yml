# commande pour lancer le docker compose en local
# docker compose -f docker-compose_local.yml --env-file dev.env up


# external = true permet qu'on utilise le network extérieur créé dans le docker compose de traefik et nommé traefik_netwk
networks:
  internal_netwk:

volumes:
  shared_volume:

services:
  scrapper_linkedin:
    networks:
      - internal_netwk

    build: ./CEA_linkedin_scrap
    # image: "node:latest"
    # user: "node"
    working_dir: /home/app/linkedin
    # environment:
    #   - NODE_ENV=production
    volumes:
      - shared_volume:/shared
    expose:
      - "8081"
    # tty: true
    command: "node index.js"

    # option de redémarrage si le container plante
    #restart: unless-stopped

  ihm:
    networks:
      # utilisation du réseau traefik_netwk
      - internal_netwk

    build: ./IHM
    # image: "python:latest"
    working_dir: /home/app/ihm
    volumes:
      - shared_volume:/shared
    ports:
      - "5000:5000"
    depends_on:
      - scrapper_linkedin
      - mongo
    command: "python run.py"

    # option de redémarrage si le container plante
    restart: unless-stopped

    # option pour tjs rebuilder l'image quand on execute docker compose up -d (sans l'option --build). Indispensable pour que le CI/CD fonctionne pour un stack dans portainer
    # issue identifié : https://github.com/portainer/portainer/issues/6288
    # explication pull_policy : https://stackoverflow.com/questions/37685581/how-to-get-docker-compose-to-use-the-latest-image-from-repository/66136860#66136860
    pull_policy: build

    #donner un nom à l'image (optionnel) : : fonctionne mais génère une erreur en début de lancement du docker compose up. Ne pose pas de pb
    # pour éviter l'erreur et rebuilder l'image à chaque lancement en mode daemon : docker-compose up --build -d
    image: ${APP_NAME:?}

    #donner un nom au container (optionnel)
    container_name: ${APP_NAME:?}

  mongo:
    networks:
      - internal_netwk

    #image: mongo:latest
    # version image compatible avec le CPU de la VM
    image: mongo:4.4.19
    # working_dir: /home/app/mongo
    # volumes:
    #   - shared_volume:/home/app
    expose:
      - "27017"

    # option de redémarrage si le container plante
    #restart: unless-stopped


